//include "stdafx.h"
#include <omp.h>
#include<iostream>
#include <stdio.h>      /* printf, scanf, puts, NULL */
#include <stdlib.h>     /* srand, rand */
#include <time.h>       /* time */
using namespace std;


#define ileWierszy 5
#define ileKolumn 5
#define cykl 1000
int i= 0, j = 0, k =0;

int main(int argc, char* argv[])
{	
	// glowna tablica
	int** tab = new int*[ileWierszy];
	for(int i = 0; i < ileWierszy;i++){
		tab[i] = new int[ileKolumn];
	} 
	
	//tablica 2 pomocnicza
	int** tabp = new int*[ileWierszy];
	for(int i = 0; i < ileWierszy;i++){
		tabp[i] = new int[ileKolumn];
	}
	
	srand(time(NULL));
	int random;

	//wpisanie zer do do tab
	for (i = 0; i < ileWierszy; i++) {
	   for (int j = 0; j < ileKolumn; j++) {
		tab[i][j] = 0;
	   }
	} 	
	//ustawienie konkretnych komórek do zycia "time step 0"
//	tab[1][2] = 1;
//	tab[2][2] = 1;
//	tab[3][2] = 1;
//	tab[3][1] = 1;
//	tab[2][0] = 1;

	//ustawienie konkretnych komórek do zycia "time step 1"
	tab[1][1] = 1;
	tab[2][2] = 1;
	tab[3][2] = 1;
	tab[3][1] = 1;
	tab[2][3] = 1;	
	
	//przypisanie tab do tabp
	for (i = 0; i < ileWierszy; i++) {  
	   for (int j = 0; j < ileKolumn; j++) {
		tabp[i][j] = tab[i][j];		 
	   }
	} 
	
	cout<<"Tablica tab poczatek"<<endl<<endl;

	//wypisanie tablicy tab przed startem
	for (i = 0; i < ileWierszy; i++) {
	   cout << endl;
	   for (int j = 0; j < ileKolumn; j++) {
		cout<< tab[i][j] << " ";
	   }
	} 
	cout<<endl<<endl;
	
	cout<<"Tablica tabp poczatek"<<endl<<endl;
	
	//wypisanie tablicy tabp przed startem
	for (i = 0; i < ileWierszy; i++) {
	   cout << endl;
	   for (int j = 0; j < ileKolumn; j++) {
		cout<< tabp[i][j] << " ";
	   }
	} 
	cout<<endl<<endl;
	cout<<"Wypisywanie tablic w cyklach"<<endl<<endl;
		
	//CYKLE 
	for(k=0; k<cykl;k++){
		
		for(i=0; i<ileKolumn;i++){	
			for(j = 0; j<ileWierszy;j++){
				int LicznikZywychSasiadow = 0;
				int top = 0, right= 0, bottom=0, left=0;
	
				if (i == 0) { left = ileKolumn - 1; }
				else left = i - 1;
			
				if (i == ileKolumn - 1) { right = 0; }
				else right = i + 1;
			
				if (j == 0) { top = ileWierszy - 1; }
				else top = j - 1;
			
				if (j == ileWierszy - 1) { bottom = 0; }
				else bottom = j + 1;
				
				if (tab[i][top] == 1) { LicznikZywychSasiadow++; }
				if (tab[right][top] == 1) { LicznikZywychSasiadow++; }
				if (tab[right][j] == 1) { LicznikZywychSasiadow++; }
				if (tab[right][bottom] == 1) { LicznikZywychSasiadow++; }
				if (tab[i][bottom] == 1) { LicznikZywychSasiadow++; }
				if (tab[left][bottom] == 1) { LicznikZywychSasiadow++; }
				if (tab[left][j] == 1) { LicznikZywychSasiadow++; }
				if (tab[left][top] == 1) { LicznikZywychSasiadow++; }
			
				//tutaj dac wpisywanie do nowej tablicy (wynikow)
					if ((tab[i][j] == 1) && ((LicznikZywychSasiadow == 3) || (LicznikZywychSasiadow == 2)) ) 
					{
							if(k == 1 && i==1 && j == 2)	
							tabp[i][j] = 1;
					}				
					else {
						if ((tab[i][j] == 0) && LicznikZywychSasiadow == 3) 
						{	
							tabp[i][j] = 1;
						}
						else{	
							tabp[i][j] = 0;
						} 
					}
			}
		}	
	
		
		//wypisanie tablicy po
		//wypisanie drugiej tablicy do porownania
//		cout <<endl<<endl;
//		for (i = 0; i < ileWierszy; i++) {
//		   cout << endl;
//		   for (int j = 0; j < ileKolumn; j++) {
//			cout<< tab[i][j] << " ";
//		   }
//		} 
	
			//przypisanie tabp do tab
		for (i = 0; i < ileWierszy; i++) {  
		   for (int j = 0; j < ileKolumn; j++) {
			tab[i][j] = tabp[i][j];
		   }
		}

	
	}
	cout <<endl<<endl;
	cout<<"Koniec wypisywania tablic z cyklach"<<endl<<endl;
	

	//wypisanie tablicy po
	//wypisanie drugiej tablicy do porownania
		for (i = 0; i < ileWierszy; i++) {
	   cout << endl;
	   for (int j = 0; j < ileKolumn; j++) {
		cout<< tab[i][j] << " ";
	   }
	}
	cout<<endl;
	for (i = 0; i < ileWierszy; i++) {
	   cout << endl;
	   for (int j = 0; j < ileKolumn; j++) {
		cout<< tabp[i][j] << " ";
	   }
	} 

	cout <<endl<<endl;
	system("pause");
    return 0;

}


